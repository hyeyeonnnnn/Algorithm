import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Main {
    static int n,l,r;
    static int [][] graph;
    static boolean[][] check;
    static int[] dx = {0,0,1,-1};
    static int[] dy = {1,-1,0,0};
    static int cnt = 0;
    static void bfs(int x, int y) {
        Queue<int[]> q = new LinkedList<>();
        ArrayList<Integer> list = new ArrayList<>(); //인구이동 발생시 list에 담음
        q.add(new int[]{x,y});
        check[x][y] = true;
        list.add(graph[x][y]);

        while(!q.isEmpty()) {
            int[] now = q.poll();
            for(int i=0;i<4;i++){
                int nextX = now[0]+dx[i];
                int nextY = now[1]+dy[i];
                if(nextX>0&&nextX<=n && nextY>0&&nextY<=n){
                    if(!check[nextX][nextY]){
                        int value = Math.abs(graph[nextX][nextY]-graph[now[0]][now[1]]);
                        if(value>=l && value<=r){
                            q.add(new int[]{nextX, nextY});
                            check[nextX][nextY] = true;
                            list.add(graph[nextX][nextY]);
                        }
                    }
                }
            }
        }


        int sum = 0;
        if(list.size()>1) {
            cnt++;
            for (int i = 0; i < list.size(); i++)
                sum += list.get(i);
            int new_value = sum/list.size();

            for(int i=1;i<=n;i++){
                for(int j=1;j<=n;j++){
                    if(check[i][j]){
                        graph[i][j] = new_value;
                    }
                }
            }
        }

    }
    public static void main(String[] args) throws NumberFormatException, IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        n = Integer.parseInt(st.nextToken());
        l = Integer.parseInt(st.nextToken());
        r = Integer.parseInt(st.nextToken());

        graph = new int[n+1][n+1];
        check = new boolean[n+1][n+1];

        for(int i=1;i<=n;i++) {
            st = new StringTokenizer(br.readLine());
            for(int j=1;j<=n;j++){
                graph[i][j] = Integer.parseInt(st.nextToken());
            }
        }

        for(int i=1;i<=n;i++){
            for(int j=1;j<=n;j++){
                bfs(i,j);
            }
        }


        System.out.println(cnt);


    }}
